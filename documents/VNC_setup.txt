Steps I took to set up and test VNC on a VM in the boreal cloud.

================================================================
First, I download TigerVNC's VncViewer-1.9.0.jar to use as a client on my local machine from:
https://github.com/TigerVNC/tigervnc/releases

Documentation for VncViewer:
https://tigervnc.org/doc/vncviewer.html

Info on TigerVNC:
https://tigervnc.org/


================================================================
To install TigerVNC server on a CentOS7 VM:

# First, I started with the CentOS7_Trinity image that I created. See notes on how I created that 
# in OpenStack-operations.txt.

# Since I had just created the CentOS7_Trinity image and everything is up to date, I skipped:
sudo yum update

# Then, install the Gnome Desktop, based on info from these websites:
# https://www.techrepublic.com/article/how-to-install-a-gui-on-top-of-centos-7/
# https://unix.stackexchange.com/questions/181503/how-to-install-desktop-environments-on-centos-7
# https://www.itzgeek.com/how-tos/linux/centos-how-tos/install-gnome-gui-on-centos-7-rhel-7.html

yum group list # just to see what groups have been installed and what are available
sudo yum groups install "GNOME Desktop" "Graphical Administration Tools"

# But, according to this:
# https://linuxconfig.org/how-to-install-gui-gnome-on-centos-7-linux-system
# The group "Server with GUI" will along with GNOME GUI also install some extra server packages.
# To get more info on each of these groups:
yum groupinfo "Server with GUI"
yum groupinfo "GNOME Desktop"

# So I did, just in case:
sudo yum groupinstall "Server with GUI"

-----------------
# Then, following these instructions to install TigerVNC:
# https://www.thegeekdiary.com/how-to-install-and-configure-vnc-tigervnc-server-in-centos-rhel-7/

yum search tigervnc
sudo yum install tigervnc-server

# Which installed:
Installed:
  tigervnc-server.x86_64 0:1.8.0-13.el7

-----------------
# Continuing to follow the instructions, to configure the server (it seems this 
#config file has been updated since the blog post was written):
sudo cp /lib/systemd/system/vncserver\@.service /etc/systemd/system/vncserver_centos\@:1.service
sudo nano /etc/systemd/system/vncserver_centos\@:1.service
# Modified this line to show the username:
#   ExecStart=/usr/bin/vncserver_wrapper centos %i
# and added this line below Type=simple:
#   User=centos

# The instructions included stuff for firewall, and I'm not sure if my vm is using that, so
# I did:
firewall-cmd -h
sudo firewall-cmd --state
sudo firewall-cmd --list-all-zones
# which returned "FirewallD is not running", so I'm going to skip the firewall commands for now.
# WAIT! hmm... the second time I tried an install, the firewall was running, so I did:
sudo firewall-cmd --zone=public --permanent --add-service=vnc-server
sudo firewall-cmd  --reload
sudo firewall-cmd --list-all-zones

# Then did:
sudo systemctl daemon-reload
# We will now enable the vncserver service for each user on the selected port, this will also enable autostart on system boot, with the commands below: 
sudo systemctl enable vncserver_centos\@:1.service
# which outputted:
#   Created symlink from /etc/systemd/system/multi-user.target.wants/vncserver_centos@:1.service 
#   to /etc/systemd/system/vncserver_centos@:1.service.
sudo systemctl daemon-reload 

# Then set up a password for the centos user (I used centos as the password):
vncpasswd centos
  Password: centos
  Verify: centos
  Would you like to enter a view-only password (y/n)? n

# Then did:
vncserver
  You will require a password to access your desktops.
  Password: centos
  Verify: centos
  Would you like to enter a view-only password (y/n)? n
  A view-only password is not used
  xauth:  file /home/centos/.Xauthority does not exist

  New 'ben-v.novalocal:1 (centos)' desktop is ben-v.novalocal:1

  Creating default startup script /home/centos/.vnc/xstartup
  Creating default config /home/centos/.vnc/config
  Starting applications specified in /home/centos/.vnc/xstartup
  Log file is /home/centos/.vnc/ben-v.novalocal:1.log


----------
# When I tried restarting the OpenStack server, the vncserver wasn't started automatically (and there was no .pid file in the ~/.vnc directory), but all I had to do was log into the server and enter the command vncserver. Then I was able to connect via the vnc client. My ssh tunnel which I had left running on the client machine was still active and operating.

# For some reason I could never get the autostart on system boot to work using the systemd/systemctl method above, so I decided to just set up a cron job to run on system reboot. I did not undo any of the above steps, since some of them might have been important. To create the cron job I did:

# first, to make sure crond.service was running (and was therefore be started on system boot):
systemctl status crond.service
# then, to edit the crontab:
crontab -e
# then I added this line to the file, and saved and exited the editor:
@reboot vncserver

# After this, vncserver was able to be started automatically on system reboot.

================================================================
Info on connecting via ssh tunneling:
https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot
http://www.allgoodbits.org/articles/view/58
https://community.time4vps.com/discussion/120/how-to-connect-to-vnc-server-ussing-ssh-tunnel
http://www.mit.edu/~avp/lqcd/ssh-vnc.html

IF CONNECTING FROM WITHIN PFC:
To connect with vncserver via the TigerVNC VncViewer java client, on your client machine, first do either of (I prefer the second if I don't want to run the ssh tunneling in the background):
ssh -v -C -L 5901:10.20.0.201:5901 -N -f -l brancourt borealpfc.nfis.org 
ssh -v -C -L 5901:10.20.0.201:5901 -N -l brancourt borealpfc.nfis.org 
(note: not sure what the difference is between borealpfc.nfis.org and borealcloud.nfis.org, but I think we're supposed to use borealpfc)

IF CONNECTING FROM HOME: 
In this case we need to set up an ssh tunnel through inf2 to borealpfc, then in a new terminal session set up a second tunnel through the first tunnel to connect to your virtual machine on the cloud:
ssh -v -L 2223:borealpfc.nfis.org:22 -N -l brancour inf2.pfc.forestry.ca
Then, in a new terminal:
ssh -v -C -L 5901:10.20.0.201:5901 -N -p 2223 -l brancourt localhost


Important! Make sure the ip address in the ssh tunnel above is the ip of the OpenStack server that you connect to. 
The password that you will be prompted to enter at this stage is the password of your account on borealcloud.nfis.org. 

Then, launch the VncViewer client from a new terminal:
java -jar VncViewer-1.11.0.jar

Then type localhost:5901 in the VNC server textbox, and click Connect (which connects to your local end of the ssh tunnel you set up, and forwards it on).
The password that you will be prompted to enter is the passord I set up for the vncserver, which is just "centos", the same as the username on the server.

NOTE: IF YOU GET THIS ERROR WHEN TRYING TO CONNECT:
SSLHandshakeException: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)
THEN: 
Relaunch VncViewer, and click "Options...", then click the Security tab, then de-select "Anonymous TLS", 
then click OK, then try Connecting again.


-L Specifies that the given port on the local (client) host is to be forwarded to the given host and port on the remote side.
ssh -L sourcePort:forwardToHost:onPort connectToHost means: connect with ssh to connectToHost, and forward all connection attempts to the local sourcePort to port onPort on the machine called forwardToHost, which can be reached from the connectToHost machine.

-C Requests compression of all data (including stdin, stdout, stderr, and data for forwarded X11, TCP and UNIX-domain connections).  The compression algorithm is the same used by gzip(1).  Compression is desirable on modem lines and other slow connections, but will only slow down things on fast networks. 
-N specifies that we're merely forwarding traffic not running a command on the remote machine.
-T disables pseudo-tty allocation.
-L indicates that the first port is a local port
-f : Requests ssh to go to background just before command execution. Once password supplied it will go to background and you can use prompt for type commands on local system.
-l vncuser : vncuser is the user to log in as on the remote machine.

================================================================

process command to look for when using top (you can also find the process id in ~/.vnc/, it's 
in the file ending in .pid): Xvnc

[centos@ben-d .vnc]$ ps aux | grep -i Xvnc
centos    9368  0.0  0.0 112708   996 pts/0    S+   01:33   0:00 grep --color=auto -i Xvnc
centos   28365  0.0  0.9 226640 36640 ?        Sl   Jul13   8:28 /usr/bin/Xvnc :1 -auth /home/centos/.Xauthority -desktop ben-d.novalocal:1 (centos) -fp catalogue:/etc/X11/fontpath.d -geometry 1024x768 -pn -rfbauth /home/centos/.vnc/passwd -rfbport 5901 -rfbwait 30000
[centos@ben-d .vnc]$ 



================================================================





==========
VNC Troubleshooting stuff...


Troubleshooting the error that occured when trying to use VncViewer on my home CentOS 8 machine:
com.tigervnc.rdr.SystemException: javax.net.ssl.SSLHandshakeException: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)

CConn: connected to host localhost port 5901
CConnection: Server supports RFB protocol version 3.8
CConnection: Using RFB protocol version 3.8
com.tigervnc.rdr.SystemException: javax.net.ssl.SSLHandshakeException: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)
	at com.tigervnc.rfb.CSecurityTLS.processMsg(CSecurityTLS.java:145)
	at com.tigervnc.rfb.CSecurityStack.processMsg(CSecurityStack.java:41)
	at com.tigervnc.rfb.CSecurityVeNCrypt.processMsg(CSecurityVeNCrypt.java:177)
	at com.tigervnc.rfb.CConnection.processSecurityMsg(CConnection.java:263)
	at com.tigervnc.rfb.CConnection.processMsg(CConnection.java:133)
	at com.tigervnc.vncviewer.VncViewer.run(VncViewer.java:565)
	at java.base/java.lang.Thread.run(Thread.java:834)
[ben@localhost TigerVNC]$ 
[ben@localhost TigerVNC]$ 


https://github.com/TigerVNC/tigervnc/issues/851
https://stackoverflow.com/questions/38205947/sslhandshakeexception-no-appropriate-protocol
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/considerations_in_adopting_rhel_8/security_considerations-in-adopting-rhel-8#tls-v10-v11_security
https://access.redhat.com/articles/3642912

update-crypto-policies --show
update-crypto-policies --set LEGACY
update-crypto-policies --set DEFAULT

Setting system policy to LEGACY
Note: System-wide crypto policies are applied on application start-up.
It is recommended to restart the system for the change of policies
to fully take place.
[ben@localhost TigerVNC]$ 


---
VNC TODO:

- troubleshoot the SSLHandshakeException (see above)
- if possible, reset: update-crypto-policies --set DEFAULT
- record the details of the VNC security-group
- record details of local .ssh/config file
- save full install instructions file
- make new setup instructions, including what to do if the home folder already contains a .Xauthority file or a .vnc folder
- test the cron job





