#!/bin/bash

##########################################################################################
# Assuming a complete and working installation of Circos on your Linux computer, these are 
# the files and directory structure that should be present to run this script. In a folder, 
# called whatever you'd like it to be called (eg. CircosScript):
# Files:
# - README-CIRCOS-SCRIPT.TXT (not necessary, but good to keep here for reference)
# - run  (this is the main script that starts the whole process)
# - convertCsvToCircosInput.R (called by the run script, converts your .csv into Circos format)
# Sub-Folder:
# - config (this folder contains custom configuration files that will be used by Circos)
#
# In the config sub-folder:
# Files:
# - circos-noTicks.conf
# - circos-withTicks.conf
# - ideogram-noTicks.conf
# - ideogram-withTicks.conf
# - ticks-noTicks.conf
# - ticks-withTicks.conf
#
# These .conf configuration files are set up to render the circos graphs in a certain way. 
# You shouldn't need to edit these files, but if you want to customize some element of the 
# graphs, read through these files and also browse some of the circos website links below.
#
# You will also supply a .csv file with the data you'd like to display in the graph. More 
# details on the format of that file below.
#
##########################################################################################
# This script creates Circos graphs using Circos with some customized configuration
# files. It runs Circos twice, first to create a version without position ticks
# along the edges of the circle, and second to create a version with postion
# ticks. It then uses some command-line Inkscape and ImageMagick commands to 
# copy the Circos output images to 600dpi tiff images of different sizes.
#
# In addition to the scripts and configuration files outlined above, this script requires
# input from you in the form of a .csv file (specified in the csvFilePath and csvFileName
# input parameters below). The .csv file must contains four columns, organized:
#   Group1 LG, Group1 position, Group2 LG, Group2 position.
# The two LG columns must be numeric (integer), indicating linkage group number (eg. 3, 
# not "LG3"). Do not use any non-numeric characters in the linkage group ids. The two 
# position columns must also be numeric, but do not need to be integers.
# The four data columns will be expected to have headers, but their names are unimportant.
#
# Before running Circos, this script calls the R script "convertCsvToCircosInput.R", 
# which converts your input .csv file into two data files which will be read by Circos.
# These two data files will be named:
#   mykaryotype.txt, mydata.txt
# They will be deleted after running Circos to generate the graphs. 
#
# To run this script:
# First, review and set the input parameters (below) appropriately, and save your changes.
# Then, from a command-line terminal, within the directory that the script is contained in, 
# type: ./run
# The custom Circos configuration files named above must be in a sub-directory named "config"
# within the directory that contains the run script. 
#
# If you encounter errors while running, open the output text file run.out
# in a text editor to see if it logs any helpful details on the errors.
#
##########################################################################################

##########################################################################################
# NOTES ON INSTALLING CIRCOS (If it isn't already installed):
#
# This can be a bit of a pain.
#
# To install Circos and the Circos-Tools package (on CentOS), download the current version 
# of each from the Circos download page and unzip them. Move the "tools" folder and all 
# its contents from the unzipped circos-tools location into the "circos" folder of the 
# unzipped circos location.
#
# To install the perl modules on CentOS for Circos, from the command-line, follow the 
# following instructions:
#
# Type:
#    perl -v # to determine if your perl version is at least 5.8 or newer
# Navigate to whichever directory you extracted circos to, and navigate to its bin directory  
# (eg. /home/benrancourt/Desktop/circos/circos-0.69-3/bin), then type:
#    ./circos modules
# Copy the list of modules to a text file, so you can refer back to it to see which modules are missing.
# Execute the following command-line commands:
#    sudo yum install perl-CPAN
#    sudo yum install gd-devel # this includes /usr/bin/gdlib-config, which is needed by some CPAN modules
#    sudo cpan Module::Build
#    sudo perl -MCPAN -e shell # opens the CPAN shell
# To install the missing modules from the list, for each module, from within the CPAN shell, type:
#    install modulename
# (eg: install Math::Bezier)
# NOTE: You might want to install module Statistics::Descriptive, which is needed by circos' tableviewer tool 
# (distributed in the tools package) but which might not be included in the list of modules needed by circos
# (this script doesn't use the tableviewer tool, by the way):
#    install Statistics::Descriptive 
# Type q to quit.
# Make sure you now have all the necessary modules by re-entering this command in the command-line:
#    ./circos modules
# If some modules are still missing, go back into the CPAN shell and try installing them again, then read the 
# ouput of the install operation and look for errors, such as modules that are required by this module which 
# for some reason weren't automatically installed, or required non-perl linux libraries that need to be 
# installed via yum. Then try installing those required modules, or resolving those dependency issues and retry 
# installing the module that didn't work.
##########################################################################################



##########################################################################################
# Input Parameters:

# The absolute file path and name of the circos command, which should be located in the bin
# directory of your circos installation:
circosExecutable="/home/benrancourt/Desktop/circos/circos-0.69-3/bin/circos"

# The directory that your input .csv file is in.
csvFilePath="/home/benrancourt/Documents/temp"
# The name of the .csv input file:
csvFileName="To-Ben-4-Circos-3617-e-100.csv"
# (optional, leave "" if not used) The name of the .csv file containing the full data for each
# LG to use in generating the karyotype.txt file.
csvFullLgData=""

# The label prefix to display for the linkage groups of your group 1 data 
# (the first two columns of your .csv file):
chromosomeLabelPrefixGroup1="Pifl-"

# The label prefix to display for the linkage groups of your group 2 data 
# (the second two columns of your .csv file):
chromosomeLabelPrefixGroup2="Pigl-"

# These parameters should not be changed, as they're referred to in our circos config files.
generatedDataFileName="mydata.txt"
generatedKaryotypeFileName="mykaryotype.txt"
group1InternalPrefix="lg-"
group2InternalPrefix="LG"
# This should not be changed unless you have more than 7 decimal places in your data. If you
# need to change it, you will need to change your circos config files as well, refer to the 
# comment about this in the convertCsvToCircosInput.R script.
positionMultiplier=10000000 


##########################################################################################
# Execution code:

Rscript convertCsvToCircosInput.R $csvFilePath $csvFileName $csvFullLgData `pwd` $generatedDataFileName $generatedKaryotypeFileName $chromosomeLabelPrefixGroup1 $chromosomeLabelPrefixGroup2 $group1InternalPrefix $group2InternalPrefix $positionMultiplier


echo "Creating image circos.png and writing report to run.out."

echo "It might take ~45-60 seconds to generate."

echo "Generating circos chart without ticks."
echo "***********************************************" > run.out
echo "Generating circos chart without ticks." >> run.out

$circosExecutable -conf config/circos-noTicks.conf -debug_group summary,timer >> run.out

echo "Generating circos chart with ticks."
echo "***********************************************" >> run.out
echo "Generating circos chart with ticks." >> run.out

$circosExecutable -conf config/circos-withTicks.conf -debug_group summary,timer >> run.out

echo "Deleting circos input files mydata.txt and mykaryotype.txt."
rm mydata.txt
rm mykaryotype.txt

echo "Converting .svg images to .eps format (also a vector format)."
echo "***********************************************" >> run.out
echo "Converting .svg images to .eps format (also a vector format)." >> run.out
inkscape --without-gui circos-noTicks.svg -E circos-noTicks.eps
inkscape --without-gui circos-withTicks.svg -E circos-withTicks.eps

echo "Converting circos-noTicks.svg to tiff."
echo "***********************************************" >> run.out
echo "Converting circos-noTicks.svg to tiff." >> run.out

# if the following commands aren't recognized by linux (CentOS), you should be able to install 
# them all by doing (installs inkscape and its dependencies):
#     sudo yum install inkscape

echo "600 dpi, 6x6 inches."
echo "600 dpi, 6x6 inches." >> run.out
inkscape --without-gui --export-png="circos-noTicks-print-600dpi-6inches.png" --export-dpi 600 -w 3600 -h 3600 circos-noTicks.svg
convert circos-noTicks-print-600dpi-6inches.png -compress LZW -alpha remove circos-noTicks-print-600dpi-6inches.tiff
rm circos-noTicks-print-600dpi-6inches.png
mogrify -alpha off circos-noTicks-print-600dpi-6inches.tiff

echo "600 dpi, 12x12 inches."
echo "600 dpi, 12x12 inches." >> run.out
inkscape --without-gui --export-png="circos-noTicks-print-600dpi-12inches.png" --export-dpi 600 -w 7200 -h 7200 circos-noTicks.svg
convert circos-noTicks-print-600dpi-12inches.png -compress LZW -alpha remove circos-noTicks-print-600dpi-12inches.tiff
rm circos-noTicks-print-600dpi-12inches.png
mogrify -alpha off circos-noTicks-print-600dpi-12inches.tiff


echo "Converting circos-withTicks.svg to tiff."
echo "***********************************************" >> run.out
echo "Converting circos-withTicks.svg to tiff." >> run.out

echo "600 dpi, 6x6 inches."
echo "600 dpi, 6x6 inches." >> run.out
inkscape --without-gui --export-png="circos-withTicks-print-600dpi-6inches.png" --export-dpi 600 -w 3600 -h 3600 circos-withTicks.svg
convert circos-withTicks-print-600dpi-6inches.png -compress LZW -alpha remove circos-withTicks-print-600dpi-6inches.tiff
rm circos-withTicks-print-600dpi-6inches.png
mogrify -alpha off circos-withTicks-print-600dpi-6inches.tiff

echo "600 dpi, 12x12 inches."
echo "600 dpi, 12x12 inches." >> run.out
inkscape --without-gui --export-png="circos-withTicks-print-600dpi-12inches.png" --export-dpi 600 -w 7200 -h 7200 circos-withTicks.svg
convert circos-withTicks-print-600dpi-12inches.png -compress LZW -alpha remove circos-withTicks-print-600dpi-12inches.tiff
rm circos-withTicks-print-600dpi-12inches.png
mogrify -alpha off circos-withTicks-print-600dpi-12inches.tiff


